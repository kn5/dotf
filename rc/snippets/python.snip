snippet     importchainer
abbr        import numpy, chainer,: ...
options     head
	import numpy as np
	import chainer
	from chainer import cuda, Function, gradient_check, report, training, utils, Variable
	from chainer import datasets, iterators, optimizers, serializers
	from chainer import Link, Chain, ChainList
	import chainer.functions as F
	import chainer.links as L
	from chainer.training import extensions

snippet     importrandom
abbr        random.seed(0),: ...
options     head
	random.seed(0)
	np.random.seed(0)
	if chainer.cuda.available:
		chainer.cuda.cupy.random.seed(0)

snippet     classc
abbr        class NN(object): ...
options     head
	class ${1:#:name}(${2:object}):

		def __init__(self, ${3}):
			${4:pass}
			super($1, self).__init__()
			with self.init_scope():
				${5:pass}

		def __call__(self, x):
			${0:pass}
			return h
